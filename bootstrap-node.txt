chef-server-ctl org-list

chef-server-ctl org-create 'uob_org' 'United Overseas Bank' | tee > uob_org.key
or chef-server-ctl org-create ‘wp’ ‘My Organization’ -f  wp.pem
chef-server-ctl org-show uob_org

chef-server-ctl user-create uob-admin FIRSTNAME LASTNAME uob-admin@gmail.com admin123 | tee > uob-admin.pem

chef-server-ctl org-user-add uob_org uob-admin --admin

chef-server-ctl user-show uob-admin

cat /etc/opscode/managed/config.rb

# managed Chef config.rb
chef_server_url        "https://localhost/organizations/chef_managed_org"
client_key             "/etc/opscode/managed/managed_user.key"
node_name              "chef_managed_user"
ssl_verify_mode        :verify_none
# validation_client_name "chef_managed_org"
# validation_key         "/etc/opscode/managed/managed_org.key"
# remove after debugging
config_log_level       :debug
config_log_location    "/tmp/chef_managed_user.log"

chef-server-ctl add-client-key uob_org uob_org --key-name uob-admin
chef-server-ctl org-show ORG_NAME

chef-server-ctl list-user-keys uob-admin

chef-server-ctl org-user-add <org> <user> --admin

chef-server-ctl org-user-add uob uob-admin --admin
User uob-admin already associated with organization uob
User uob-admin is added to admins and billing-admins group

yes id_rsa | ssh-keygen -t rsa -N “” -b 2048

scp $1 vagrant@10.10.10.100:/tmp/$1
scp vagrant@10.10.10.100:/tmp/$1 $1


[root@n1 .chef]# knife user key create uob-admin -k uob-admin.key
Created key: uob-admin.key

knife bootstrap 34.216.104.21 -ssh-user ec2-user --sudo  --node-ssl-verify-mode none -N oregon-node 

======================
cd /etc/opscode
mkdir wp
chef-server-ctl org-create ‘wp’ ‘WestBank’ | tee wp.pem

chef-server-ctl user-create wp-admin FIRSTNAME LASTNAME wp-admin@gmail.com wpadmin123 | tee wp-admin.pem
chef-server-ctl org-user-add wp wp-admin --admin

knife node list

knife bootstrap 10.10.10.100 -ssh-user vagrant --sudo  --node-ssl-verify-mode none -N wp-node1

cat /etc/opscode/wp/config.rb 

chef_server_url        "https://10.10.10.99/organizations/wp"
client_key             "/etc/opscode/wp/wp-admin.pem"
node_name              "wp-admin"
ssl_verify_mode        :verify_none
#validation_client_name "wp"
#validation_key         "/etc/opscode/wp/wp.pem"
# remove after debugging
config_log_level       :debug
config_log_location    "/tmp/wp-admin.log"

In any dir of vagrant user, cp 3 files
-rwx------. 1 vagrant vagrant  426 Dec  6 08:58 config.rb
-r--------. 1 vagrant vagrant 1675 Dec  6 08:57 wp-admin.pem
-r--------. 1 vagrant vagrant 1679 Dec  6 08:57 wp.pem

In the directory, can run
knife bootstrap 10.10.10.100 -ssh-user vagrant --sudo  --node-ssl-verify-mode none -N wp-node9
knife node delete wp-node1
knife bootstrap 13.54.114.133 -ssh-user centos --sudo  --node-ssl-verify-mode none -N first-node

======================
chef push wp-policy-group my_ntp.lock.json
knife node policy set wp-node9 wp-policy-group my_ntp

list everything 
knife list -R /

************************

/home/vagrant/cookbooks
/home/vagrant/wp/config.rb wp-admin.pem wp.pem
content of config.rb
# Westpac config.rb
chef_server_url        "https://10.10.10.99/organizations/wp"
client_key             "/home/vagrant/wp/wp-admin.pem"
node_name              "wp-admin"
ssl_verify_mode        :verify_none
#validation_client_name "wp"
#validation_key         "/home/vagrant/wp/wp.pem"
# remove after debugging
#config_log_level       :debug
#config_log_location    "/tmp/wp-admin.log"
***********************

=========
# managed Chef config.rb on the chef server

chef_server_url        "https://ec2-13-54-5-20.ap-southeast-2.compute.amazonaws.com/organizations/chef_managed_org"
client_key             "/etc/opscode/managed/managed_user.key"
node_name              "chef_managed_user"
ssl_verify_mode        :verify_none
#validation_client_name "chef_managed_org"
#validation_key         "/etc/opscode/managed/managed_org.key"
# remove after debugging
config_log_level       :debug
config_log_location    "/tmp/chef_managed_user.log"
========
or on the workstation node
pwd
/home/centos/workstation/.chef
[centos@ip-172-31-22-119 .chef]$ ls
config.rb  keys

cat config.rb 
chef_server_url        "https://ec2-13-54-5-20.ap-southeast-2.compute.amazonaws.com/organizations/chef_managed_org"
client_key             "/home/centos/workstation/.chef/keys/managed_user.key"
node_name              "chef_managed_user"
ssl_verify_mode        :verify_none
#validation_client_name "chef_managed_org"
#validation_key         "/home/centos/workstation/.chef/keys/managed_org.key"
# remove after debugging
config_log_level       :debug
config_log_location    "/tmp/chef_managed_user.log"
========

knife bootstrap 13.54.114.133 -x centos -P <password> --sudo -N firstNode --node-ssl-verify-mode none
knife bootstrap 13.211.120.176 -x centos -P <password> --sudo -N secondNode --node-ssl-verify-mode none

*** allow port 443 on the chef server ***

Verify, Run knife command in the directory where config.rb is 
knife client list
knife node list

To allow ssh with password
edit /etc/ssh/sshd_config

PasswordAuthentication yes

then service sshd reload
Redirecting to /bin/systemctl reload sshd.service

****** each config.rb corresponds to one organization and its nodes **********

chef_server_url        "https://ec2-13-54-5-20.ap-southeast-2.compute.amazonaws.com/organizations/uob_org"
client_key             "/home/centos/workstation/.chef/keys/uob-admin.pem"
node_name              "uob-admin"
ssl_verify_mode        :verify_none
#validation_client_name "uob_org"
#validation_key         "/home/centos/workstation/.chef/keys/uob_org.key"
# remove after debugging
config_log_level       :debug
config_log_location    "/tmp/uob_org.log"

***** .key is the same as .pem *******


